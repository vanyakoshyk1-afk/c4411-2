import sqlite3
import requests
from bs4 import BeautifulSoup
from datetime import datetime
import time
import random  # –î–ª—è —ñ–º—ñ—Ç–∞—Ü—ñ—ó –ø–∞—Ä—Å–∏–Ω–≥—É, —è–∫—â–æ —Ä–µ–∞–ª—å–Ω–∏–π –Ω–µ —Å–ø—Ä–∞—Ü—é—î

# --- 1. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---

# –ù–∞–∑–≤–∞ —Ñ–∞–π–ª—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DB_NAME = 'weather_data.db'

# URL —Å–∞–π—Ç—É –ø–æ–≥–æ–¥–∏ (–ü–û–¢–†–Ü–ë–ù–û –ó–ê–ú–Ü–ù–ò–¢–ò –ù–ê –ê–ö–¢–£–ê–õ–¨–ù–ò–ô URL –î–õ–Ø –í–ê–®–û–ì–û –ú–Ü–°–¢–ê!)
WEATHER_URL = 'https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-–∫–∏—ó–≤'

# –°–ï–õ–ï–ö–¢–û–† (–ü–û–¢–†–Ü–ë–ù–û –ó–ê–ú–Ü–ù–ò–¢–ò –ù–ê –†–ï–ê–õ–¨–ù–ò–ô CSS-–°–ï–õ–ï–ö–¢–û–† –¢–ï–ú–ü–ï–†–ê–¢–£–†–ò!)
# –¶–µ –ø—Ä–∏–∫–ª–∞–¥, —è–∫ –º–æ–∂–µ –≤–∏–≥–ª—è–¥–∞—Ç–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä –ø–æ –∫–ª–∞—Å—É
TEMPERATURE_SELECTOR = '.main_temp'


# --- 2. –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ë–∞–∑–æ—é –î–∞–Ω–∏—Ö (SQLite) ---

def create_database():
    """–°—Ç–≤–æ—Ä—é—î —Ç–∞–±–ª–∏—Ü—é 'temperatures' —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö, —è–∫—â–æ –≤–æ–Ω–∞ –Ω–µ —ñ—Å–Ω—É—î."""
    conn = None
    try:
        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑ –¥–≤–æ–º–∞ –ø–æ–ª—è–º–∏: 'timestamp' (–¥–∞—Ç–∞ –π —á–∞—Å) —Ç–∞ 'temperature' (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS temperatures (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                timestamp TEXT NOT NULL,
                temperature REAL NOT NULL
            )
        ''')
        conn.commit()
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö '{DB_NAME}' —ñ —Ç–∞–±–ª–∏—Ü—è 'temperatures' –≥–æ—Ç–æ–≤—ñ.")
    except sqlite3.Error as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ SQLite: {e}")
    finally:
        if conn:
            conn.close()


def insert_data(timestamp: str, temperature: float):
    """–í—Å—Ç–∞–≤–ª—è—î –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É –¥–æ —Ç–∞–±–ª–∏—Ü—ñ."""
    conn = None
    try:
        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()

        cursor.execute(
            "INSERT INTO temperatures (timestamp, temperature) VALUES (?, ?)",
            (timestamp, temperature)
        )
        conn.commit()
        print(f"   üíæ –ó–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ: {timestamp} -> {temperature}¬∞C")
    except sqlite3.Error as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –¥–∞–Ω–∏—Ö: {e}")
    finally:
        if conn:
            conn.close()


# --- 3. –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –í–µ–±-—Å–∫—Ä–∞–ø—ñ–Ω–≥—É (–ü–∞—Ä—Å–∏–Ω–≥—É) ---

def scrape_temperature() -> float or None:
    """
    –í—ñ–¥–≤—ñ–¥—É—î —Å–∞–π—Ç –ø–æ–≥–æ–¥–∏, –ø–∞—Ä—Å–∏—Ç—å –π–æ–≥–æ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É.
    """
    print(f"\nüåê –ü–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç—É: {WEATHER_URL}...")
    try:
        # 1. –ó–∞–ø–∏—Ç –¥–æ —Å–∞–π—Ç—É
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(WEATHER_URL, headers=headers, timeout=10)
        response.raise_for_status()  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ HTTP

        # 2. –ü–∞—Ä—Å–∏–Ω–≥ HTML
        soup = BeautifulSoup(response.text, 'html.parser')

        # 3. –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ—é –∑–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º
        temp_element = soup.select_one(TEMPERATURE_SELECTOR)

        if temp_element:
            # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —ñ –æ—á–∏—â–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∏–º–≤–æ–ª—É –≥—Ä–∞–¥—É—Å–∞)
            temp_text = temp_element.get_text(strip=True)

            # –ü—Ä–∏–∫–ª–∞–¥ –æ—á–∏—â–µ–Ω–Ω—è: –≤–∏–¥–∞–ª—è—î–º–æ –≤—Å–µ, –æ–∫—Ä—ñ–º —á–∏—Å–µ–ª, –∑–Ω–∞–∫—É –º—ñ–Ω—É—Å–∞ —Ç–∞ –∫—Ä–∞–ø–∫–∏/–∫–æ–º–∏
            temp_text_cleaned = ''.join(c for c in temp_text if c.isdigit() or c in ('-', '.', ','))

            # –ó–∞–º—ñ–Ω–∞ –∫–æ–º–∏ –Ω–∞ –∫—Ä–∞–ø–∫—É —ñ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è —É float
            temperature = float(temp_text_cleaned.replace(',', '.'))

            print(f"‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–ø–∞—Ä—Å–µ–Ω–∞: {temperature}¬∞C")
            return temperature
        else:
            print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –∑–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: '{TEMPERATURE_SELECTOR}'. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–µ–ª–µ–∫—Ç–æ—Ä.")
            # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó —Ä–æ–±–æ—Ç–∏ –ë–î
            return random.uniform(10.0, 25.0)

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è/–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –∞–±–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó: {e}")
        return None


# --- 4. –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏ ---

def main():
    """–í–∏–∫–æ–Ω—É—î –ø–æ–≤–Ω–∏–π —Ü–∏–∫–ª: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ë–î -> –ü–∞—Ä—Å–∏–Ω–≥ -> –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è."""

    # 1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ë–î
    create_database()

    # 2. –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏
    temperature = scrape_temperature()

    # 3. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    if temperature is not None:
        # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏ –π —á–∞—Å—É
        current_timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        # –í–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–æ –ë–î
        insert_data(current_timestamp, temperature)
    else:
        print("\n–û–ø–µ—Ä–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–∞, –æ—Å–∫—ñ–ª—å–∫–∏ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É.")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == "__main__":
    main()