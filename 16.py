import requests
from bs4 import BeautifulSoup


# --- –ö–ª–∞—Å –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –í–∞–ª—é—Ç ---
class CurrencyConverter:
    """
    –ö–ª–∞—Å –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—ó –≤–∞–ª—é—Ç–∏ (–≥—Ä–Ω) —É –¥–æ–ª–∞—Ä–∏ –°–®–ê (USD)
    –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫—É—Ä—Å—É, –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ –∑ —Å–∞–π—Ç—É –ù–ë–£.
    """
    # –ü—Ä–∏–∫–ª–∞–¥ URL —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ù–ë–£ –∑ –∫—É—Ä—Å–∞–º–∏ (–º–æ–∂–µ –∑–º—ñ–Ω–∏—Ç–∏—Å—è!)
    NBU_URL = "https://bank.gov.ua/ua/markets/exchangerates"

    def __init__(self):
        """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä —ñ –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å USD."""
        self.usd_rate = self._get_usd_rate()

    def _get_usd_rate(self):
        """
        –ó–¥—ñ–π—Å–Ω—é—î –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ù–ë–£ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É –¥–æ–ª–∞—Ä–∞ –°–®–ê.
        –ü–æ–≤–µ—Ä—Ç–∞—î –∫—É—Ä—Å (float) –∞–±–æ None —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏.
        """
        print(f"–û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É –∑: {self.NBU_URL}...")
        try:
            # 1. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è HTML-–≤–º—ñ—Å—Ç—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            response = requests.get(self.NBU_URL)
            response.raise_for_status()  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ HTTP

            # 2. –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é BeautifulSoup
            soup = BeautifulSoup(response.text, 'html.parser')

            # 3. –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –∫—É—Ä—Å–æ–º USD
            # –£–≤–∞–≥–∞: —Ü–µ–π —Å–µ–ª–µ–∫—Ç–æ—Ä —î –ø—Ä–∏–∫–ª–∞–¥–æ–º —ñ –º–æ–∂–µ –ø–æ—Ç—Ä–µ–±—É–≤–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è!
            # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–Ω–∞—Ö–æ–¥–∏–º–æ —Ä—è–¥–æ–∫, –¥–µ —î "–î–æ–ª–∞—Ä –°–®–ê"
            usd_row = soup.find('td', text='–î–æ–ª–∞—Ä –°–®–ê')

            if usd_row:
                # –ö—É—Ä—Å –∑–∞–∑–≤–∏—á–∞–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É —Å—Ç–æ–≤–ø—Ü—ñ (–Ω–∞—Å—Ç—É–ø–Ω–∏–π sibling)
                # –ß–∞—Å—Ç–æ —Ü–µ 4-–π <td> –ø—ñ—Å–ª—è –Ω–∞–∑–≤–∏ –≤–∞–ª—é—Ç–∏ –≤ —Ä—è–¥–∫—É
                # –î–ª—è —Ü—å–æ–≥–æ –ø—Ä–∏–∫–ª–∞–¥—É, –ø—Ä–∏–ø—É—Å—Ç–∏–º–æ, –∫—É—Ä—Å –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É <td>
                # –£ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—ñ –º–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –±—ñ–ª—å—à —Å–∫–ª–∞–¥–Ω–∏–π –ø–æ—à—É–∫, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ id —Ç–∞–±–ª–∏—Ü—ñ —Ç–∞ –Ω–æ–º–µ—Ä—É –∫–æ–ª–æ–Ω–∫–∏

                # –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —à—É–∫–∞—î–º–æ —É —Ä—è–¥–∫—É, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –Ω–∞–∑–≤—É –≤–∞–ª—é—Ç–∏
                parent_row = usd_row.find_parent('tr')
                if parent_row:
                    # –ö—É—Ä—Å (–æ—Ñ—ñ—Ü—ñ–π–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è) –∑–∞–∑–≤–∏—á–∞–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É 5-–π –∫–æ–ª–æ–Ω—Ü—ñ (—ñ–Ω–¥–µ–∫—Å 4)
                    rate_element = parent_row.find_all('td')[4]
                    rate_text = rate_element.text.replace(',', '.').strip()
                    rate = float(rate_text)
                    print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ –∫—É—Ä—Å USD: {rate}")
                    return rate

            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∫—É—Ä—Å USD –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–µ–ª–µ–∫—Ç–æ—Ä.")
            return None

        except requests.exceptions.RequestException as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∞–±–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏: {e}")
            return None
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É: {e}")
            return None

    def convert_to_usd(self, amount_uah: float) -> float:
        """
        –ö–æ–Ω–≤–µ—Ä—Ç—É—î —Å—É–º—É –∑ UAH —É USD.

        :param amount_uah: –°—É–º–∞ —É –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ–π –≤–∞–ª—é—Ç—ñ (–≥—Ä–Ω).
        :return: –°—É–º–∞ —É –¥–æ–ª–∞—Ä–∞—Ö –°–®–ê (USD).
        """
        if self.usd_rate is None:
            print("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –Ω–µ–º–æ–∂–ª–∏–≤–∞: –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å.")
            return 0.0

        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è: —Å—É–º–∞ –≤ –≥—Ä–Ω / –∫—É—Ä—Å –≥—Ä–Ω –¥–æ 1 USD
        amount_usd = amount_uah / self.usd_rate
        return amount_usd


# --- –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏ ---
def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º."""

    # 1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É
    converter = CurrencyConverter()

    if converter.usd_rate is None:
        print("\n–ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–≤–µ—Ä—à—É—î —Ä–æ–±–æ—Ç—É —á–µ—Ä–µ–∑ –Ω–µ–º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å.")
        return

    # 2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–≤–æ–¥—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    while True:
        try:
            print("\n---------------------------------------------------")
            user_input = input("–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É —É –≤–∞–ª—é—Ç—ñ —Å–≤–æ—î—ó –∫—Ä–∞—ó–Ω–∏ (UAH) –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –∞–±–æ '–≤–∏—Ö—ñ–¥': ")

            if user_input.lower() in ('–≤–∏—Ö—ñ–¥', 'exit'):
                print("üëã –î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è! –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è.")
                break

            amount_uah = float(user_input)

            if amount_uah < 0:
                print("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–µ–≤—ñ–¥'—î–º–Ω–µ —á–∏—Å–ª–æ.")
                continue

            # 3. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
            amount_usd = converter.convert_to_usd(amount_uah)

            print(f"\nüìä –ö—É—Ä—Å USD: {converter.usd_rate} –≥—Ä–Ω –∑–∞ 1 $")
            print(f"üí∞ {amount_uah:,.2f} –≥—Ä–Ω = **{amount_usd:,.2f} $ –°–®–ê**")

        except ValueError:
            print("‚ùó –ü–æ–º–∏–ª–∫–∞: –í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ.")
        except Exception as e:
            print(f"–°—Ç–∞–ª–∞—Å—è –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")


if __name__ == "__main__":
    main()